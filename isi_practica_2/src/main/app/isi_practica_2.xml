<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:twitter="http://www.mulesoft.org/schema/mule/twitter" xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:smtps="http://www.mulesoft.org/schema/mule/smtps" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.2"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/smtps http://www.mulesoft.org/schema/mule/smtps/current/mule-smtps.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/twitter http://www.mulesoft.org/schema/mule/twitter/current/mule-twitter.xsd">
<http:polling-connector name="HTTP_Polling" cookieSpec="netscape" validateConnections="true" pollingFrequency="16001" sendBufferSize="0" receiveBufferSize="0" receiveBacklog="0" clientSoTimeout="10000" serverSoTimeout="10000" socketSoLinger="0" proxyHostname="api.thingspeak.com" proxyPort="80" doc:name="HTTP Polling"/>
    <vm:endpoint exchange-pattern="one-way" path="ComplexEventConsumerPath" name="ComplexEventConsumerGlobalVM" doc:name="VM">
    </vm:endpoint>
    <http:connector name="HTTP_HTTPS" cookieSpec="netscape" validateConnections="true" sendBufferSize="0" receiveBufferSize="0" receiveBacklog="0" clientSoTimeout="10000" serverSoTimeout="10000" socketSoLinger="0" doc:name="HTTP-HTTPS"/>
    <http:endpoint exchange-pattern="request-response"  connector-ref="HTTP_HTTPS" method="POST" name="HTTP" address="http://wsf.cdyne.com/WeatherWS/Weather.asmx" doc:name="HTTP"/>
    <twitter:config name="Twitter" accessKey="3208278525-GJCrodYTYu6zg7FJD2X5BoWNwhd0h62trWJDjoA" accessSecret="bkbpOXJIM5Ac8Pml4mlxKSx68cavnLLBRhbTYmUDJPqP6" consumerKey="XmYaHe9tNnJhypWsgbZijiWEX" consumerSecret="FnK8oJ95h3YgOKGPcr7vJGj5xmwXGAslY7RhfQu2ekhxfF1mE3" doc:name="Twitter"/>
<flow name="IslandEventReceptionAndManagement" doc:name="IslandEventReceptionAndManagement">
<composite-source doc:name="Composite Source">
<http:inbound-endpoint exchange-pattern="one-way" host="api.thingspeak.com" port="80" path="channels/34619/feeds.json?results=1" connector-ref="HTTP_Polling" doc:name="HTTP" responseTimeout="1000"/>
<http:inbound-endpoint exchange-pattern="one-way" host="api.thingspeak.com" port="80" path="channels/34636/feeds.json?results=1" connector-ref="HTTP_Polling" doc:name="HTTP" responseTimeout="1000"/>
</composite-source>
<custom-transformer class="transformer.JsonToBusEventTransformer" doc:name="JSON to IslandEvent"/>
        <scatter-gather doc:name="Scatter-Gather">
            <logger message=" #[payload]" level="INFO" doc:name="Logger"/>
            <component doc:name="Send BusEvent to Esper Engine">
                <singleton-object class="esper.SendEventToEsperComponent"/>
            </component>
        </scatter-gather>
</flow>
    <flow name="ComplexEventReceptionAndDecisionMaking" doc:name="ComplexEventReceptionAndDecisionMaking">
        <vm:inbound-endpoint exchange-pattern="one-way"  doc:name="ComplexEvent Consumer" ref="ComplexEventConsumerGlobalVM">
        </vm:inbound-endpoint>
        <scatter-gather doc:name="Scatter-Gather">
            <processor-chain>
                <set-payload value="Alerta '#[message.inboundProperties['eventPatternName']]': #[payload.toString()]" doc:name="Set Alert Payload"/>
                <smtps:outbound-endpoint host="smtp.gmail.com" port="465" user="${email.username}" password="${email.password}" to="${emailto}" from="${emailfrom}" subject="Alerta producida" responseTimeout="10000" doc:name="Send Alert By Email"/>
            </processor-chain>
            <logger message="***Complex Event: #[payload]" level="INFO" doc:name="Logger"/>
            <processor-chain>
                <set-payload value="#[payload]" doc:name="Set Twitter Information"/>
                <choice doc:name="Choice">
                    <when expression="message.inboundProperties['eventPatternName'] == 'PotentialTrafficJam'">
                        <twitter:update-status config-ref="Twitter" status="Atasco producido en la l&#237;nea #[payload.get('Autobus').toString()]. Rogamos tengan paciencia" latitude="#[payload.get('busLatitud')]" longitude="#[payload.get('busLongitud')]" doc:name="TuitearAtasco"/>
                    </when>
                    <when expression="message.inboundProperties['eventPatternName'] == 'BusInStation'">
                        <twitter:update-status config-ref="Twitter" status="El autobus #[payload.get('Autobus').toString()] ha finalizado su ruta. Pr&#243;ximamente retomar&#225; el itinerario." doc:name="TuitearRetirada"/>
                    </when>
                </choice>
            </processor-chain>
        </scatter-gather>
    </flow>
    <flow name="EventPatternAdditionToEsper" doc:name="EventPatternAdditionToEsper">
        <file:inbound-endpoint path="C:\Users\Enrique\gitISI\EAMRRG_ISI\isi_practica_2\Ficheros\new-eventpattern" moveToDirectory="C:\Users\Enrique\gitISI\EAMRRG_ISI\isi_practica_2\Ficheros\deployed-eventpattern" pollingFrequency="2000" fileAge="1000" responseTimeout="10000" doc:name="New EPL EventPattern">
            <file:filename-regex-filter pattern=".+\.epl" caseSensitive="true"/>
        </file:inbound-endpoint>
        <file:file-to-string-transformer doc:name="File to String"/>
        <component doc:name="Add EventPattern to Esper Engine">
            <singleton-object class="esper.AddEventPatternToEsperComponent"/>
        </component>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
            <catch-exception-strategy when="exception.causeMatches('com.espertech.esper.*')" doc:name="Syntax Error in EventPattern Code">
                <file:outbound-endpoint path="C:\Users\Enrique\git\EAMRRG_ISI\isi_practica_2\Ficheros\incorrect-eventpattern" responseTimeout="10000" doc:name="Incorrect EventPattern Code"/>
            </catch-exception-strategy>
        </choice-exception-strategy>
    </flow>
</mule>